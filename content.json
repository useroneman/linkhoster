{
  "utm14": {
    "title": "Bash Example",
    "description": "Click the button below to copy the Bash script.",
    "code": [
      "def bruteforce(target_password):",
      "    characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+-=[]{};':,./<>?\"",
      "    password_length = len(target_password)",
      "",
      "    for i in range(password_length):",
      "        for char in characters:",
      "            if char == target_password[i]:",
      "                print(f\"Password found: {char}\")",
      "                break",
      "            else:",
      "                print(f\"Trying: {char}\")",
      "",
      "# Usage guide and examples",
      "print(\"Bruteforce Password Cracker\")",
      "print(\"Usage:\")",
      "print(\"   python bruteforce.py <target_password>\")",
      "print(\"Examples:\")",
      "print(\"   python bruteforce.py abc123\")",
      "print(\"   python bruteforce.py password123\")",
      "print(\"   python bruteforce.py !@#$%^&*()\")",
      "",
      "# Test the script with different target passwords",
      "target_password = \"password123\"",
      "bruteforce(target_password)"
    ],
    "additionalInfo": "This is a basic brute force password cracker in Python. It demonstrates how a script can attempt to guess a target password by checking each character."
  },
  "utm15": {
    "title": "Network and Port Scanner",
    "description": "This script uses the nmap library to scan the network for live hosts and then performs a port scan on each host.",
    "code": [
      "import nmap",
      "import socket",
      "",
      "def scan_network(network_prefix):",
      "    nm = nmap.PortScanner()",
      "    nm.scan(hosts=f\"{network_prefix}.0/24\", arguments=\"-sP\")",
      "    hosts_list = [(x, nm[x]['status']['state']) for x in nm.all_hosts()]",
      "    return hosts_list",
      "",
      "def port_scan(host, ports):",
      "    nm = nmap.PortScanner()",
      "    nm.scan(host, ports=ports)",
      "    return nm[host]['tcp']",
      "",
      "# Example usage",
      "network_prefix = \"192.168.1\"",
      "hosts = scan_network(network_prefix)",
      "print(f\"Found {len(hosts)} hosts:\")",
      "for host, status in hosts:",
      "    print(f\"{host} is {status}\")",
      "",
      "print(\"\\nPerforming port scan on each host...\")",
      "for host, status in hosts:",
      "    if status == \"up\":",
      "        print(f\"\\nScanning {host}:\")",
      "        ports = port_scan(host, \"22,80,443\")",
      "        for port in ports:",
      "            print(f\"Port {port} is {ports[port]['state']}\")"
    ],
    "additionalInfo": "Example output:\n\nFound 5 hosts:\n192.168.1.10 is up\n192.168.1.11 is down\n192.168.1.12 is up\n192.168.1.13 is up\n192.168.1.14 is up\n\nPerforming port scan on each host...\n\nScanning 192.168.1.10:\nPort 22 is open\nPort 80 is closed\nPort 443 is closed\n\nScanning 192.168.1.12:\nPort 22 is closed\nPort 80 is open\nPort 443 is closed\n\nScanning 192.168.1.13:\nPort 22 is closed\nPort 80 is closed\nPort 443 is closed\n\nScanning 192.168.1.14:\nPort 22 is closed\nPort 80 is closed\nPort 443 is closed"
}

  "utm1": {
    "title": "Bluetooth DDoS Attack",
    "description": "This code demonstrates a basic Bluetooth DDoS attack using Python.",
    "code": [
      "from scapy.all import *",
      "from bluepy.btle import Peripheral",
      "peripheral = Peripheral('00:11:22:33:44:55')",
      "for _ in range(100):",
      "  peripheral.writeCharacteristic(0x15, b'Attack')"
    ],
    "additionalInfo": "This code targets a Bluetooth device."
  }
}
